/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tdsi.projet;

import com.tdsi.projet.*;
import java.io.File;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author FaridMo
 */
public class Accueil extends javax.swing.JFrame {
    
    //static SecretKey cle;
    
    /**
     * Creates new form Accueil
     */
    
    
    public Accueil() {
        initComponents();
        
        algo_chiffre.setEnabled(false);
            jLabel3.setEnabled(false);
            jLabel5.setEnabled(false);
            cle_path.setEnabled(false);
            parcourir_cle.setEnabled(false);
        
       
    }
    
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        genkeyPanel = new javax.swing.JPanel();
        algoLabel = new javax.swing.JLabel();
        choixAlgo = new javax.swing.JComboBox<>();
        tailleLabel = new javax.swing.JLabel();
        choixTaille = new javax.swing.JComboBox<>();
        btnGen = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cryptPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        crypt_path = new javax.swing.JTextField();
        parcourir_crypt = new javax.swing.JButton();
        parcourir_decrypt = new javax.swing.JButton();
        decrypt_path = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        chiffre_button = new javax.swing.JButton();
        dechiffre_bouton = new javax.swing.JButton();
        cle_path = new javax.swing.JTextField();
        parcourir_cle = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        algo_chiffre = new javax.swing.JComboBox<>();
        hachagePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message_clair = new javax.swing.JTextArea();
        hacher_message = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        message_hache = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fonc_hach = new javax.swing.JComboBox<>();
        sauver = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        quitter = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        signePanel = new javax.swing.JPanel();
        titreApp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        genkeyPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        algoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        algoLabel.setText(" Algorithme utilisé : ");
        genkeyPanel.add(algoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 130, -1));

        choixAlgo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        choixAlgo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisissez", "AES", "DES", "DESede" }));
        choixAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixAlgoActionPerformed(evt);
            }
        });
        genkeyPanel.add(choixAlgo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 120, 30));

        tailleLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tailleLabel.setText("Taille :");
        genkeyPanel.add(tailleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 50, -1));

        choixTaille.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        choixTaille.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisissez", "128", "196", "256", "512" }));
        genkeyPanel.add(choixTaille, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 120, 30));

        btnGen.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnGen.setText("Générer");
        btnGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenActionPerformed(evt);
            }
        });
        genkeyPanel.add(btnGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 130, 40));

        jButton1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton1.setText("QUITTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        genkeyPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, -1));

        jTabbedPane1.addTab("Génération de clé", genkeyPanel);

        cryptPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText(" Fichier à chiffrer  :");
        cryptPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        crypt_path.setEditable(false);
        crypt_path.setBackground(new java.awt.Color(153, 255, 255));
        cryptPanel.add(crypt_path, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 220, 30));

        parcourir_crypt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        parcourir_crypt.setText("Parcourir");
        parcourir_crypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcourir_cryptActionPerformed(evt);
            }
        });
        cryptPanel.add(parcourir_crypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        parcourir_decrypt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        parcourir_decrypt.setText("Parcourir");
        parcourir_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcourir_decryptActionPerformed(evt);
            }
        });
        cryptPanel.add(parcourir_decrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        decrypt_path.setEditable(false);
        decrypt_path.setBackground(new java.awt.Color(51, 255, 153));
        cryptPanel.add(decrypt_path, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 220, 30));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText(" Fichier à dechiffrer :");
        cryptPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Algo / mode / padding  :");
        cryptPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 140, -1));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Clé générée :");
        cryptPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        chiffre_button.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        chiffre_button.setText("Chiffrer");
        chiffre_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiffre_buttonActionPerformed(evt);
            }
        });
        cryptPanel.add(chiffre_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        dechiffre_bouton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        dechiffre_bouton.setText("Déchiffrer");
        dechiffre_bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dechiffre_boutonActionPerformed(evt);
            }
        });
        cryptPanel.add(dechiffre_bouton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        cle_path.setEditable(false);
        cle_path.setBackground(new java.awt.Color(255, 255, 153));
        cryptPanel.add(cle_path, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 220, 30));

        parcourir_cle.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        parcourir_cle.setText("Parcourir");
        parcourir_cle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcourir_cleActionPerformed(evt);
            }
        });
        cryptPanel.add(parcourir_cle, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, -1, -1));

        jButton4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton4.setText("QUITTER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        cryptPanel.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, -1, -1));

        algo_chiffre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AES/CBC/NoPadding", "AES/CBC/PKCS5Padding", "AES/ECB/NoPadding", "AES/ECB/PKCS5Padding", "DES/CBC/NoPadding", "DES/CBC/PKCS5Padding", "DES/ECB/NoPadding", "DES/ECB/PKCS5Padding", "DESede/CBC/NoPadding", "DESede/CBC/PKCS5Padding", "DESede/ECB/NoPadding", "DESede/ECB/PKCS5Padding" }));
        cryptPanel.add(algo_chiffre, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 230, -1));

        jTabbedPane1.addTab("Chiffrement/Déchiffrement", cryptPanel);

        hachagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        message_clair.setColumns(20);
        message_clair.setRows(5);
        jScrollPane1.setViewportView(message_clair);

        hachagePanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 500, 60));

        hacher_message.setText("Valider");
        hacher_message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hacher_messageActionPerformed(evt);
            }
        });
        hachagePanel.add(hacher_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        message_hache.setEditable(false);
        message_hache.setColumns(20);
        message_hache.setRows(5);
        jScrollPane2.setViewportView(message_hache);

        hachagePanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 500, 70));

        jLabel6.setText("TAPEZ VOTRE MESSAGE :");
        hachagePanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel7.setText("Message haché :");
        hachagePanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Fonction de Hachage : ");
        hachagePanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        fonc_hach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MD5", "SHA-1", "SHA-256", "SHA-512" }));
        fonc_hach.setAlignmentX(0.0F);
        hachagePanel.add(fonc_hach, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 97, -1, 20));

        sauver.setText("Sauvegarder");
        sauver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauverActionPerformed(evt);
            }
        });
        hachagePanel.add(sauver, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, -1));

        jLabel8.setFont(new java.awt.Font("Calibri", 2, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Si vous voulez enregistrer le message haché dans un fichier, cliquez sur sauvegarder");
        hachagePanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 390, 20));

        quitter.setText("Quitter");
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });
        hachagePanel.add(quitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 230, -1, 20));

        jLabel9.setFont(new java.awt.Font("Calibri", 2, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Au cas où vous voulez l'enregistrer dans un fichier de votre choix ");
        hachagePanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 254, -1, -1));

        jLabel10.setFont(new java.awt.Font("Calibri", 2, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("n'oubliez pas d'écrire le nom du fichier suivi de l'extension, ex : message.txt");
        hachagePanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, -1, -1));

        jTabbedPane1.addTab("Hachage", hachagePanel);

        signePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jTabbedPane1.addTab("Signer/Verifier", signePanel);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 530, 320));

        titreApp.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        titreApp.setForeground(new java.awt.Color(0, 0, 102));
        titreApp.setText("- Application de chiffrement et déchiffrement des fichiers -");
        getContentPane().add(titreApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 510, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void choixAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixAlgoActionPerformed
            if(choixAlgo.getSelectedItem() == "AES"){
                    choixTaille.removeAllItems();
                    choixTaille.addItem("128");
                }
            if(choixAlgo.getSelectedItem() == "AES"){
                    choixTaille.removeAllItems();
                    choixTaille.addItem("128");
                }
            if(choixAlgo.getSelectedItem() == "DES"){
                    choixTaille.removeAllItems();
                    choixTaille.addItem("56");
                }
            if(choixAlgo.getSelectedItem() == "DESede"){
                    choixTaille.removeAllItems();
                    choixTaille.addItem("168");
                }
            
    }//GEN-LAST:event_choixAlgoActionPerformed

    private void btnGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenActionPerformed
              String choix = (String) choixAlgo.getSelectedItem();
              String taille = (String) choixTaille.getSelectedItem();
              
              
              JFileChooser ouvrirBoite = new JFileChooser();
              int ch= ouvrirBoite.showSaveDialog(ouvrirBoite);
				
                if(ch == ouvrirBoite.APPROVE_OPTION){
                    File f=ouvrirBoite.getSelectedFile();    
                    String path=f.getPath();
                    SecretKey cle = CryptoUtil.genkey(choix, Integer.parseInt(String.valueOf(taille)));
                    CryptoUtil.savekey(cle,path);
                    
                }
                
               
            
                
    }//GEN-LAST:event_btnGenActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            this.dispose();
            System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void parcourir_cleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcourir_cleActionPerformed
        JFileChooser ouvrirBoite = new JFileChooser();
        int ch= ouvrirBoite.showOpenDialog(ouvrirBoite);

        if(ch == ouvrirBoite.APPROVE_OPTION){
            File f=ouvrirBoite.getSelectedFile();
            String path=f.getPath();
            cle_path.setText(path);
            CryptoUtil.receive_key(path);
        }

    }//GEN-LAST:event_parcourir_cleActionPerformed

    private void chiffre_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiffre_buttonActionPerformed
            
            String algo = "AES";
            //if(algo_chiffre.getSelectedItem()=="AES/CBC/NoPadding"){
            //        algo = "AES";
            //}
           //String algo = (String) algo_chiffre.getSelectedItem();
            
            //String key = cle_path.getText();
            String key = "This is a secret";
            File input = new File(crypt_path.getText());
            File output;
            //String key = "This is a secret";
            
      if(input.getPath().endsWith(".txt")){
                try {
                    output = new File(input.getPath().replaceAll(".txt", ".crypt"));
                    CryptoUtil.fileProcessor(Cipher.ENCRYPT_MODE, key, algo,input, output);
                    input.delete();
                    System.out.println("Success");
                    JOptionPane.showMessageDialog(this, "Le chiffrement a été effectué avec succès");
                } catch (IOException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchPaddingException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                }
      }  
            
    }//GEN-LAST:event_chiffre_buttonActionPerformed

    private void parcourir_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcourir_decryptActionPerformed
        JFileChooser ouvrirBoite = new JFileChooser();
        ouvrirBoite.setCurrentDirectory(new File("Fichiers"+File.separator));
        ouvrirBoite.addChoosableFileFilter(new Filtre(new String[]{"crypt"}, "fichiers cryptes (.crypt)"));
        ouvrirBoite.setFileHidingEnabled(false);
        ouvrirBoite.setAcceptAllFileFilterUsed(true);
        int ch= ouvrirBoite.showOpenDialog(ouvrirBoite);

        if(ch == ouvrirBoite.APPROVE_OPTION){
            File f=ouvrirBoite.getSelectedFile();
            String path=f.getPath();
            decrypt_path.setText(path);
            algo_chiffre.setEnabled(false);
            jLabel3.setEnabled(false);
            jLabel5.setEnabled(false);
            cle_path.setEnabled(false);
            parcourir_cle.setEnabled(false);
          /*  
            decrypt_path.setText(path);
            
            crypt_path.setEnabled(false);
            parcourir_crypt.setEnabled(false);
            jLabel1.setEnabled(false);
           */
        }
    }//GEN-LAST:event_parcourir_decryptActionPerformed

    private void parcourir_cryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcourir_cryptActionPerformed
        JFileChooser ouvrirBoite = new JFileChooser();
        int ch= ouvrirBoite.showOpenDialog(ouvrirBoite);

        if(ch == ouvrirBoite.APPROVE_OPTION){
            File f=ouvrirBoite.getSelectedFile();
            String path=f.getPath();
            crypt_path.setText(path);
            
            algo_chiffre.setEnabled(false);
            jLabel3.setEnabled(false);
            jLabel5.setEnabled(false);
            cle_path.setEnabled(false);
            parcourir_cle.setEnabled(false);
           /* 
            decrypt_path.setEnabled(false);
            parcourir_decrypt.setEnabled(false);
            jLabel2.setEnabled(false);
           */
        }
    }//GEN-LAST:event_parcourir_cryptActionPerformed

    private void dechiffre_boutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dechiffre_boutonActionPerformed
                 String algo = "AES";
            //if(algo_chiffre.getSelectedItem()=="AES/CBC/NoPadding"){
            //        algo = "AES";
            //}
           //String algo = (String) algo_chiffre.getSelectedItem();
            
            //String key = cle_path.getText();
            String key = "This is a secret";
            File input = new File(decrypt_path.getText());
            File output;
            //String key = "This is a secret";
            
      if(input.getPath().endsWith(".crypt")){
                try {
                    output = new File(input.getPath().replaceAll(".crypt", ".txt"));
                    CryptoUtil.fileProcessor(Cipher.DECRYPT_MODE, key, algo,input, output);
                    input.delete();
                    System.out.println("Success");
                    JOptionPane.showMessageDialog(this, "Le dechiffrement a été effectué avec succès");
                } catch (IOException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchPaddingException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                }
      }
    }//GEN-LAST:event_dechiffre_boutonActionPerformed

    private void hacher_messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hacher_messageActionPerformed
                   String message = message_clair.getText();
                   String fonction = null;
                   if(fonc_hach.getSelectedItem() == "MD5"){
                       fonction = "MD5";
                   }
                   if(fonc_hach.getSelectedItem() == "SHA-1"){
                       fonction = "SHA-1";
                   }
                   if(fonc_hach.getSelectedItem() == "SHA-256"){
                       fonction = "SHA-256";
                   }
                   if(fonc_hach.getSelectedItem() == "SHA-512"){
                       fonction = "SHA-512";
                   }
                   
                   MessageDigest messageDigest;
                    
                    try {

                        messageDigest = MessageDigest.getInstance(fonction);

                        messageDigest.update(message.getBytes());

                        byte[] messageDigestByte = messageDigest.digest();

                        StringBuffer stringBuffer = new StringBuffer();

                        for (byte bytes : messageDigestByte) {

                            stringBuffer.append(String.format("%02x", bytes & 0xff));

                        }

                        String message_haché = stringBuffer.toString();
                        
                        
                        message_hache.setText(message_haché);
                       // System.out.println("data:" + data);

                       // System.out.println("digestedMD5(hex):" + stringBuffer.toString());

                    } catch (NoSuchAlgorithmException exception) {

                        // TODO Auto-generated catch block

                        exception.printStackTrace();

                    }
    }//GEN-LAST:event_hacher_messageActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_quitterActionPerformed

    private void sauverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauverActionPerformed
        JFileChooser ouvrirBoite = new JFileChooser();
              int ch= ouvrirBoite.showSaveDialog(ouvrirBoite);
				
                if(ch == ouvrirBoite.APPROVE_OPTION){
                    File f=ouvrirBoite.getSelectedFile();    
                    String path=f.getPath();
                    String mess=message_hache.getText();
                    CryptoUtil.saveText(mess, path);
                    JOptionPane.showMessageDialog(this, "L'enregistrement a été effectué avec succès");
                }
    }//GEN-LAST:event_sauverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accueil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algoLabel;
    private javax.swing.JComboBox<String> algo_chiffre;
    private javax.swing.JButton btnGen;
    private javax.swing.JButton chiffre_button;
    private javax.swing.JComboBox<String> choixAlgo;
    private javax.swing.JComboBox<String> choixTaille;
    private javax.swing.JTextField cle_path;
    private javax.swing.JPanel cryptPanel;
    private javax.swing.JTextField crypt_path;
    private javax.swing.JButton dechiffre_bouton;
    private javax.swing.JTextField decrypt_path;
    private javax.swing.JComboBox<String> fonc_hach;
    private javax.swing.JPanel genkeyPanel;
    private javax.swing.JPanel hachagePanel;
    private javax.swing.JButton hacher_message;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea message_clair;
    private javax.swing.JTextArea message_hache;
    private javax.swing.JButton parcourir_cle;
    private javax.swing.JButton parcourir_crypt;
    private javax.swing.JButton parcourir_decrypt;
    private javax.swing.JButton quitter;
    private javax.swing.JButton sauver;
    private javax.swing.JPanel signePanel;
    private javax.swing.JLabel tailleLabel;
    private javax.swing.JLabel titreApp;
    // End of variables declaration//GEN-END:variables
}
